/// <reference types="node" />
import type { Container } from 'inversify';
import type { IConfiguration } from './IConfiguration';
import type { IService } from './IService';
export declare type CliArgv = string[];
export declare type YargsParams = {
    [x: string]: unknown;
    _: (string | number)[];
    $0: string;
} | {
    [x: string]: unknown;
    _: (string | number)[];
    $0: string;
};
export declare abstract class AppRunner<T extends IService, K extends IConfiguration> {
    runCliSync(process: NodeJS.Process): void;
    abstract runCli(argv: CliArgv): Promise<void>;
    startApp(params: YargsParams, container: Container): Promise<void>;
}
