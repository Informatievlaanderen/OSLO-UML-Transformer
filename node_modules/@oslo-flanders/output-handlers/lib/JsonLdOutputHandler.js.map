{"version":3,"file":"JsonLdOutputHandler.js","sourceRoot":"","sources":["JsonLdOutputHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import type { WriteStream } from 'fs';\r\nimport type { IOutputHandler, QuadStore } from '@oslo-flanders/core';\r\nimport { ns } from '@oslo-flanders/core';\r\nimport type * as RDF from '@rdfjs/types';\r\nimport { getOsloContext } from './utils/osloContext';\r\n\r\nexport class JsonLdOutputHandler implements IOutputHandler {\r\n  public async write(store: QuadStore, writeStream: any): Promise<void> {\r\n    const [packages, classes, attributes, dataTypes, statements] = await Promise.all([\r\n      this.getPackages(store),\r\n      this.getClasses(store),\r\n      this.getAttributes(store),\r\n      this.getDataTypes(store),\r\n      this.getRdfStatements(store),\r\n    ]);\r\n\r\n    const document: any = {};\r\n    document['@context'] = getOsloContext();\r\n    this.addDocumentInformation(document, store);\r\n\r\n    document.packages = packages;\r\n    document.classes = classes;\r\n    document.attributes = attributes;\r\n    document.dataTypes = dataTypes;\r\n    document.statements = statements;\r\n\r\n    (<WriteStream>writeStream).write(JSON.stringify(document, null, 2));\r\n  }\r\n\r\n  private addDocumentInformation(document: any, store: QuadStore): void {\r\n    const versionIdQuad = store.findQuad(null, ns.prov('generatedAtTime'), null);\r\n\r\n    if (!versionIdQuad) {\r\n      throw new Error(`Unnable to find version id for the document.`);\r\n    }\r\n\r\n    document['@id'] = versionIdQuad.subject.value;\r\n    document.generatedAtTime = versionIdQuad.object.value;\r\n  }\r\n\r\n  private async getPackages(store: QuadStore): Promise<any> {\r\n    const packageIds = store.findSubjects(ns.rdf('type'), ns.example('Package'));\r\n    return packageIds.map(id => {\r\n      const packageQuads = store.findQuads(id, null, null);\r\n\r\n      const baseUriValue = packageQuads.find(x => x.predicate.equals(ns.example('baseUri')));\r\n      if (!baseUriValue) {\r\n        throw new Error(`Unnable to find base URI for package with .well-known id ${id.value}`);\r\n      }\r\n\r\n      const assignedUri = packageQuads.find(x => x.predicate.equals(ns.example('assignedUri')));\r\n      return {\r\n        '@id': id.value,\r\n        '@type': 'Package',\r\n        ...assignedUri && {\r\n          assignedUri: assignedUri.object.value,\r\n        },\r\n        baseUri: baseUriValue.object.value,\r\n      };\r\n    });\r\n  }\r\n\r\n  private async getClasses(store: QuadStore): Promise<any> {\r\n    const classIds = store.findSubjects(ns.rdf('type'), ns.owl('Class'));\r\n    return classIds.reduce<any[]>((jsonLdClasses, subject) => {\r\n      // Classes with skos:Concept URI are not being published separately, but only\r\n      // as part of an attribute's range\r\n      if (subject.equals(ns.skos('Concept'))) {\r\n        return jsonLdClasses;\r\n      }\r\n\r\n      const classQuads = store.findQuads(subject, null, null);\r\n\r\n      const assignedUri = classQuads.find(x => x.predicate.equals(ns.example('assignedUri')));\r\n      const definitionQuads = classQuads.filter(x => x.predicate.equals(ns.rdfs('comment')));\r\n      const labelQuads = classQuads.filter(x => x.predicate.equals(ns.rdfs('label')));\r\n      const scopeQuad = classQuads.find(x => x.predicate.equals(ns.example('scope')));\r\n      const parentQuads = classQuads.filter(x => x.predicate.equals(ns.rdfs('subClassOf')));\r\n\r\n      jsonLdClasses.push(\r\n        {\r\n          '@id': subject.value,\r\n          '@type': 'Class',\r\n          ...assignedUri && {\r\n            assignedUri: assignedUri.object.value,\r\n          },\r\n          definition: definitionQuads\r\n            .map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n          label: labelQuads.map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n          scope: scopeQuad?.object.value,\r\n          ...parentQuads.length > 0 && {\r\n            parent: parentQuads.map(x => ({ '@id': x.object.value })),\r\n          },\r\n        },\r\n      );\r\n\r\n      return jsonLdClasses;\r\n    }, []);\r\n  }\r\n\r\n  private async getAttributes(store: QuadStore): Promise<any> {\r\n    const dataTypeAttributeIds = store.findSubjects(ns.rdf('type'), ns.owl('DatatypeProperty'));\r\n    const objectPropertyAttributeIds = store.findSubjects(ns.rdf('type'), ns.owl('ObjectProperty'));\r\n    const propertyAttributeIds = store.findSubjects(ns.rdf('type'), ns.rdf('Property'));\r\n\r\n    return [\r\n      ...dataTypeAttributeIds,\r\n      ...objectPropertyAttributeIds,\r\n      ...propertyAttributeIds,\r\n    ].map(subject => {\r\n      const attributeQuads = store.findQuads(subject, null, null);\r\n\r\n      const assignedUri = attributeQuads.find(x => x.predicate.equals(ns.example('assignedUri')));\r\n      const definitionQuads = attributeQuads.filter(x => x.predicate.equals(ns.rdfs('comment')));\r\n      const attributeTypeQuad = attributeQuads\r\n        .find(x => x.subject.equals(subject) && x.predicate.equals(ns.rdf('type')));\r\n\r\n      if (!attributeTypeQuad) {\r\n        throw new Error(`Attribute ${subject.value} has no type.`);\r\n      }\r\n\r\n      const labelQuads = attributeQuads\r\n        .filter(x => x.subject.equals(subject) && x.predicate.equals(ns.rdfs('label')));\r\n      const usageNoteQuads = attributeQuads.filter(x => x.predicate.equals(ns.vann('usageNote')));\r\n\r\n      const domainQuads = attributeQuads.filter(x => x.predicate.equals(ns.rdfs('domain')));\r\n      const rangeQuad = attributeQuads.find(x => x.predicate.equals(ns.rdfs('range')));\r\n\r\n      const scopeQuad = attributeQuads.find(x => x.predicate.equals(ns.example('scope')));\r\n      const parentQuad = attributeQuads.find(x => x.predicate.equals(ns.rdfs('subPropertyOf')));\r\n      const minCardinalityQuad = attributeQuads.find(x => x.predicate.equals(ns.shacl('minCount')));\r\n      const maxCardinalityQuad = attributeQuads.find(x => x.predicate.equals(ns.shacl('maxCount')));\r\n\r\n      return {\r\n        '@id': subject.value,\r\n        '@type': attributeTypeQuad.object.value,\r\n        ...assignedUri && {\r\n          assignedUri: assignedUri.object.value,\r\n        },\r\n        ...labelQuads.length > 0 && {\r\n          label: labelQuads.map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n        },\r\n        ...definitionQuads.length > 0 && {\r\n          definition: definitionQuads\r\n            .map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n        },\r\n        ...usageNoteQuads.length > 0 && {\r\n          usageNote: usageNoteQuads\r\n            .map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n        },\r\n        ...domainQuads.length > 0 && {\r\n          domain: domainQuads.map(x => ({ '@id': x.object.value })),\r\n        },\r\n        ...rangeQuad && {\r\n          range: {\r\n            '@id': rangeQuad.object.value,\r\n          },\r\n        },\r\n        ...parentQuad && {\r\n          parent: parentQuad.object.value,\r\n        },\r\n        minCount: minCardinalityQuad?.object.value,\r\n        maxCount: maxCardinalityQuad?.object.value,\r\n        scope: scopeQuad?.object.value,\r\n      };\r\n    });\r\n  }\r\n\r\n  private async getDataTypes(store: QuadStore): Promise<any> {\r\n    const datatypeIds = store.findSubjects(ns.rdf('type'), ns.example('DataType'));\r\n    return datatypeIds.map(subject => {\r\n      const dataTypeQuads = store.findQuads(subject, null, null);\r\n\r\n      const assignedUri = dataTypeQuads.find(x => x.predicate.equals(ns.example('assignedUri')));\r\n      const definitionQuads = dataTypeQuads.filter(x => x.predicate.equals(ns.rdfs('comment')));\r\n      const labelQuads = dataTypeQuads.filter(x => x.predicate.equals(ns.rdfs('label')));\r\n      const usageNoteQuads = dataTypeQuads.filter(x => x.predicate.equals(ns.vann('usageNote')));\r\n      const scopeQuad = dataTypeQuads.find(x => x.predicate.equals(ns.example('scope')));\r\n\r\n      return {\r\n        '@id': subject.value,\r\n        '@type': 'DataType',\r\n        ...assignedUri && {\r\n          assignedUri: assignedUri.object.value,\r\n        },\r\n        ...labelQuads.length > 0 && {\r\n          label: labelQuads.map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n        },\r\n        ...definitionQuads.length > 0 && {\r\n          definition: definitionQuads\r\n            .map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n        },\r\n        ...usageNoteQuads.length > 0 && {\r\n          usageNote: usageNoteQuads\r\n            .map(x => ({ '@language': (<RDF.Literal>x.object).language, '@value': x.object.value })),\r\n        },\r\n        ...scopeQuad && {\r\n          scope: scopeQuad.object.value,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  private async getRdfStatements(store: QuadStore): Promise<any> {\r\n    const statementIds = store.findSubjects(ns.rdf('type'), ns.rdf('Statement'));\r\n    return statementIds.map(subject => {\r\n      const statementSubject = store.findObject(subject, ns.rdf('subject'));\r\n      const statementPredicate = store.findObject(subject, ns.rdf('predicate'));\r\n      const statementObject = store.findObject(subject, ns.rdf('object'));\r\n\r\n      const statementLabels = store.findObjects(subject, ns.rdfs('label'));\r\n      const statementDefinitions = store.findObjects(subject, ns.rdfs('comment'));\r\n      const statementUsageNotes = store.findObjects(subject, ns.vann('usageNote'));\r\n      const statementConceptScheme = store.findObject(subject, ns.example('usesConceptScheme'));\r\n\r\n      return {\r\n        '@type': ns.rdf('Statement').value,\r\n        subject: {\r\n          '@id': statementSubject?.value,\r\n        },\r\n        predicate: {\r\n          '@id': statementPredicate?.value,\r\n        },\r\n        object: {\r\n          '@id': statementObject?.value,\r\n        },\r\n        ...statementLabels.length > 0 && {\r\n          label: statementLabels\r\n            .map(x => ({ '@language': (<RDF.Literal>x).language, '@value': x.value })),\r\n        },\r\n        ...statementDefinitions.length > 0 && {\r\n          definition: statementDefinitions\r\n            .map(x => ({ '@language': (<RDF.Literal>x).language, '@value': x.value })),\r\n        },\r\n        ...statementUsageNotes.length > 0 && {\r\n          usageNote: statementUsageNotes\r\n            .map(x => ({ '@language': (<RDF.Literal>x).language, '@value': x.value })),\r\n        },\r\n        ...statementConceptScheme && {\r\n          usesConceptScheme: statementConceptScheme.value,\r\n        },\r\n      };\r\n    });\r\n  }\r\n}\r\n"]}