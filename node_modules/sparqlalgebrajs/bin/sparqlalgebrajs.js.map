{"version":3,"file":"sparqlalgebrajs.js","sourceRoot":"","sources":["sparqlalgebrajs.ts"],"names":[],"mappings":";;;;;;AAEA,wDAAgC;AAChC,yEAA6C;AAC7C,0CAAuC;AACvC,uDAA+B;AAE/B,MAAM,IAAI,GAAG,IAAA,kBAAQ,EAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACzC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACxB,KAAK,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE;CACnD,CAAC,CAAC;AAEH,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAC9C;IACI,OAAO,CAAC,KAAK,CAAC,oEAAoE,CAAC,CAAC;IACpF,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC1B,OAAO,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;IACpD,OAAO,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;IACtF,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;IAC7D,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;IACrE,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAC/C;AAED,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,EAC1B;IACI,OAAO,CAAC,GAAG,CAAC,IAAA,iBAAQ,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACzE;KAED;IACI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI,CAAC,SAAS,CAAC,IAAA,uBAAS,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;CACtH","sourcesContent":["#! /usr/bin/env node\n\nimport minimist from 'minimist';\nimport translate from '../lib/sparqlAlgebra';\nimport {toSparql} from '../lib/sparql';\nimport Util from \"../lib/util\";\n\nconst args = minimist(process.argv.slice(2), {\n    boolean: ['q', 'r', 's'],\n    alias: { q: 'quads', r: 'reverse', s: 'strict' }\n});\n\nif (args.h || args.help || args._.length !== 1)\n{\n    console.error('usage: ./sparqlalgebrajs [-q/--quads] \"SELECT * WHERE { ?x ?y ?z}\"');\n    console.error('options:');\n    console.error('  -h --help    : Show this output.');\n    console.error('  -q --quads   : Apply GRAPH statements to convert triples to quads.');\n    console.error('  -r --reverse : Convert algebra to SPARQL.');\n    console.error('  -s --strict  : Only allow parsing of pure SPARQL.');\n    process.exit((args.h || args.help) ? 0 : 1);\n}\n\nif (args.r || args.reverse)\n{\n    console.log(toSparql(JSON.parse(args._[0]), { sparqlStar: !args.s }));\n}\nelse\n{\n    console.log(JSON.stringify(Util.objectify(translate(args._[0], { quads: args.q, sparqlStar: !args.s })), null, 2));\n}\n"]}