{"version":3,"file":"IActiveTag.js","sourceRoot":"","sources":["IActiveTag.ts"],"names":[],"mappings":"","sourcesContent":["import * as RDF from \"@rdfjs/types\";\nimport {IRdfaPattern} from \"./IRdfaPattern\";\n\n/**\n * Data holder for the RDFa state in XML tags.\n */\nexport interface IActiveTag {\n  name: string;\n  prefixesAll: {[prefix: string]: string};\n  prefixesCustom: {[prefix: string]: string};\n  subject?: RDF.NamedNode | RDF.BlankNode | boolean;\n  explicitNewSubject?: boolean;\n  predicates?: RDF.NamedNode[];\n  object?: RDF.NamedNode | RDF.BlankNode | boolean;\n  text?: string[];\n  vocab?: string;\n  language?: string;\n  datatype?: RDF.NamedNode;\n  collectChildTags?: boolean;\n  collectedPatternTag?: IRdfaPattern;\n  interpretObjectAsTime?: boolean;\n  incompleteTriples?: { predicate: RDF.Quad_Predicate, reverse: boolean, list?: boolean }[];\n  inlist: boolean;\n  listMapping: {[predicate: string]: (RDF.Term|boolean)[]};\n  listMappingLocal: {[predicate: string]: (RDF.Term|boolean)[]};\n  skipElement: boolean;\n  localBaseIRI?: RDF.NamedNode;\n}\n"]}