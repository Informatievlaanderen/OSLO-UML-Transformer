{"version":3,"file":"ActorAbstractParse.js","sourceRoot":"","sources":["ActorAbstractParse.ts"],"names":[],"mappings":"","sourcesContent":["import type { IAction, IActorOutput } from '@comunica/core';\nimport type { Readable } from 'readable-stream';\n\nexport type IParseMetadata = Record<string, any> | undefined;\n\nexport interface IActionParse<T extends IParseMetadata = IParseMetadata> extends IAction {\n  /**\n   * A readable string stream in a certain serialization that needs to be parsed.\n   */\n  data: NodeJS.ReadableStream;\n  /**\n   * The returned headers of the final URL.\n   */\n  headers?: Headers;\n  /**\n   * Metadata properties to be given to the string stream that needs to be parsed\n   */\n  metadata?: T;\n}\n\nexport interface IActorParseOutput<T, K extends IParseMetadata = IParseMetadata> extends IActorOutput {\n  /**\n   * The resulting data stream.\n   */\n  data: T & Readable;\n  /**\n   * Any metadata produced from Parsing\n   */\n  metadata?: K;\n}\n"]}