{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@comunica/types/^2.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@comunica/types",
  "components": [
    {
      "@id": "ct:components/IActionContext.jsonld#IActionContext",
      "@type": "AbstractClass",
      "requireElement": "IActionContext",
      "comment": "An immutable key-value mapped context that can be passed to any (@link IAction}. All actors that receive a context must forward this context to any actor, mediator or bus that it calls. This context may be transformed before forwarding.  For type-safety, the keys of this context can only be instances of {@link IActionContextKey}, where each key supplies acceptable the value type.  Each bus should describe in its action interface which context entries are possible (non-restrictive) and corresponding context keys should be exposed in '@comunica/context-entries' for easy reuse. If actors support any specific context entries next to those inherited by the bus action interface, then this should be described in its README file.  This context can contain any information that might be relevant for certain actors. For instance, this context can contain a list of datasources over which operators should query.",
      "parameters": [],
      "memberFields": [
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_set",
          "memberFieldName": "set"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_setDefault",
          "memberFieldName": "setDefault"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_delete",
          "memberFieldName": "delete"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_get",
          "memberFieldName": "get"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_getSafe",
          "memberFieldName": "getSafe"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_has",
          "memberFieldName": "has"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_merge",
          "memberFieldName": "merge"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_keys",
          "memberFieldName": "keys"
        },
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContext__member_toJS",
          "memberFieldName": "toJS"
        }
      ],
      "constructorArguments": []
    },
    {
      "@id": "ct:components/IActionContext.jsonld#IActionContextKey",
      "@type": "AbstractClass",
      "requireElement": "IActionContextKey",
      "comment": "Keys that can be used within an {@link IActionContext}.  To avoid entry conflicts, all keys must be properly namespaced using the following convention: Each key name must be prefixed with the package name followed by a `:`. For example, the `rdf-resolve-quad-pattern` bus declares the `sources` entry, which should be named as `@comunica/bus-rdf-resolve-quad-pattern:sources`.",
      "genericTypeParameters": [
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContextKey__generic_V"
        }
      ],
      "parameters": [],
      "memberFields": [
        {
          "@id": "ct:components/IActionContext.jsonld#IActionContextKey__member_name",
          "memberFieldName": "name"
        }
      ],
      "constructorArguments": []
    }
  ]
}