{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAEA,SAAS,qBAAqB,CAAI,KAAmB,EAAE,MAAS;IAC9D,OAAO,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACxC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACvC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAwB,cAAc,CAAU,MAAoB;IAClE,MAAM,KAAK,GAAQ,EAAE,CAAC;IACtB,OAAO,qBAAqB,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACnF,CAAC;AAHD,iCAGC","sourcesContent":["import type { EventEmitter } from 'events';\n\nfunction promisifyEventEmitter<T>(event: EventEmitter, result: T): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    event.on('end', () => resolve(result));\n    event.on('error', reject);\n  });\n}\n\nexport default function arrayifyStream<T = any>(stream: EventEmitter): Promise<T[]> {\n  const array: T[] = [];\n  return promisifyEventEmitter(stream.on('data', data => array.push(data)), array);\n}\n"]}