"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pkgparts = void 0;
/**
 * Get the base name of a package
 *
 * Given an import path of `@scope/pkgname/nested-module`, this function will return the base name
 * of the package, `@scope/pkgname`. For unscoped packages, this would return just the name.
 *
 * @private
 * @param     name  - The name of the package
 */
function pkgparts(name) {
    const parts = name.split('/');
    const isScoped = name.startsWith('@');
    const basename = isScoped
        // Scoped package name - pick first two parts (the scope and the package name)
        ? parts.slice(0, 2).join('/')
        // Regular package name - pick just the first part (the package name)
        : parts[0];
    const relpath = isScoped
        // Scoped package name - pick everything after the package scope and name identifier
        ? parts.slice(2).join('/') || null
        // Regular package name - pick everything after the package name identifier
        : parts.slice(1).join('/') || null;
    return {
        basename,
        relpath,
    };
}
exports.pkgparts = pkgparts;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGtncGFydHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwa2dwYXJ0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFPQTs7Ozs7Ozs7R0FRRztBQUNILFNBQVMsUUFBUSxDQUFDLElBQVk7SUFDNUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUM3QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ3JDLE1BQU0sUUFBUSxHQUFHLFFBQVE7UUFDdkIsOEVBQThFO1FBQzlFLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1FBQzdCLHFFQUFxRTtRQUNyRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ1osTUFBTSxPQUFPLEdBQUcsUUFBUTtRQUN0QixvRkFBb0Y7UUFDcEYsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUk7UUFDbEMsMkVBQTJFO1FBQzNFLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUE7SUFFcEMsT0FBTztRQUNMLFFBQVE7UUFDUixPQUFPO0tBQ1IsQ0FBQTtBQUNILENBQUM7QUFHQyw0QkFBUSIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBQa2dQYXJ0cyB7XG4gIC8qKiBQYWNrYWdlIG5hbWUgb25seSwgZXhjbHVkaW5nIGFueSBuZXN0ZWQgcGF0aHMgaW4gdGhlIGltcG9ydCBwYXRoICovXG4gIGJhc2VuYW1lOiBzdHJpbmdcbiAgLyoqIFJlbGF0aXZlIHBhdGggd2l0aGluIHRoZSBwYWNrYWdlLCBpZiBwcm92aWRlZCBpbiB0aGUgb3JpZ2luYWwgaW1wb3J0IHBhdGggKi9cbiAgcmVscGF0aDogc3RyaW5nIHwgbnVsbFxufVxuXG4vKipcbiAqIEdldCB0aGUgYmFzZSBuYW1lIG9mIGEgcGFja2FnZVxuICpcbiAqIEdpdmVuIGFuIGltcG9ydCBwYXRoIG9mIGBAc2NvcGUvcGtnbmFtZS9uZXN0ZWQtbW9kdWxlYCwgdGhpcyBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgYmFzZSBuYW1lXG4gKiBvZiB0aGUgcGFja2FnZSwgYEBzY29wZS9wa2duYW1lYC4gRm9yIHVuc2NvcGVkIHBhY2thZ2VzLCB0aGlzIHdvdWxkIHJldHVybiBqdXN0IHRoZSBuYW1lLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0gICAgIG5hbWUgIC0gVGhlIG5hbWUgb2YgdGhlIHBhY2thZ2VcbiAqL1xuZnVuY3Rpb24gcGtncGFydHMobmFtZTogc3RyaW5nKTogUGtnUGFydHMge1xuICBjb25zdCBwYXJ0cyA9IG5hbWUuc3BsaXQoJy8nKVxuICBjb25zdCBpc1Njb3BlZCA9IG5hbWUuc3RhcnRzV2l0aCgnQCcpXG4gIGNvbnN0IGJhc2VuYW1lID0gaXNTY29wZWRcbiAgICAvLyBTY29wZWQgcGFja2FnZSBuYW1lIC0gcGljayBmaXJzdCB0d28gcGFydHMgKHRoZSBzY29wZSBhbmQgdGhlIHBhY2thZ2UgbmFtZSlcbiAgICA/IHBhcnRzLnNsaWNlKDAsIDIpLmpvaW4oJy8nKVxuICAgIC8vIFJlZ3VsYXIgcGFja2FnZSBuYW1lIC0gcGljayBqdXN0IHRoZSBmaXJzdCBwYXJ0ICh0aGUgcGFja2FnZSBuYW1lKVxuICAgIDogcGFydHNbMF1cbiAgY29uc3QgcmVscGF0aCA9IGlzU2NvcGVkXG4gICAgLy8gU2NvcGVkIHBhY2thZ2UgbmFtZSAtIHBpY2sgZXZlcnl0aGluZyBhZnRlciB0aGUgcGFja2FnZSBzY29wZSBhbmQgbmFtZSBpZGVudGlmaWVyXG4gICAgPyBwYXJ0cy5zbGljZSgyKS5qb2luKCcvJykgfHwgbnVsbFxuICAgIC8vIFJlZ3VsYXIgcGFja2FnZSBuYW1lIC0gcGljayBldmVyeXRoaW5nIGFmdGVyIHRoZSBwYWNrYWdlIG5hbWUgaWRlbnRpZmllclxuICAgIDogcGFydHMuc2xpY2UoMSkuam9pbignLycpIHx8IG51bGxcblxuICByZXR1cm4ge1xuICAgIGJhc2VuYW1lLFxuICAgIHJlbHBhdGgsXG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgcGtncGFydHMsXG4gIFBrZ1BhcnRzLFxufVxuIl19