{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport https from 'https';\nimport path from 'path';\nimport axios from 'axios';\nimport extract from 'extract-zip';\nimport {\n  GET_OPTIONS,\n  PUBLICATION_ENVIRONMENT,\n  VERSION_ID,\n} from '../constants/constants';\nimport { SpecificationType } from '../constants/enum';\nimport type { IConfig, IEapConfig } from '../types/config';\n\nexport const extractZip = async (\n  zipPath: string,\n  destination: string,\n): Promise<void> => {\n  try {\n    await extract(zipPath, { dir: destination });\n    console.log('Extraction complete');\n  } catch (error: unknown) {\n    console.error('Error during extraction:', error);\n  }\n};\n\nexport const downloadFile = (url: string, dest: string): Promise<void> =>\n  new Promise((resolve, reject) => {\n    try {\n      const file = fs.createWriteStream(dest);\n      https.get(url, (response) => {\n        // Extra check for redirect since the Github URL behind 'Download as zip' button is a redirect\n        if (response.statusCode === 302 || response.statusCode === 301) {\n          console.log(\n            'Redirecting to new location',\n            response?.headers?.location,\n          );\n          // Redirect - download from new location\n          return downloadFile(response?.headers?.location ?? '', dest);\n        }\n        response.pipe(file);\n\n        file.on('finish', () => {\n          file.close();\n          console.log('Download Completed');\n          resolve();\n        });\n\n        file.on('error', (err: unknown) => {\n          console.error('Error during download:', err);\n          reject(err);\n        });\n      });\n    } catch (error: unknown) {\n      console.error('Error during download:', error);\n      reject(error);\n    }\n  });\n\nexport const createZipFromGithub = async (\n  url: string,\n  pathName: string,\n): Promise<void> => {\n  try {\n    await downloadFile(url, pathName);\n  } catch (error: unknown) {\n    console.error('Error during zip creation process:', error);\n  }\n};\n\nexport const listFiles = async (dir: string): Promise<string[]> =>\n  new Promise((resolve, reject) => {\n    fs.readdir(dir, (err, files) => {\n      if (err) {\n        console.error('Error during script:', err);\n        reject(err);\n      } else {\n        resolve(files);\n      }\n    });\n  });\n\nexport const readFile = async (filePath: string): Promise<string> =>\n  new Promise(async (resolve, reject) => {\n    try {\n      const fileContent = await fs.promises.readFile(filePath, 'utf-8');\n      resolve(fileContent);\n    } catch (error: unknown) {\n      console.error(`Error reading file ${filePath}:`, error);\n      reject(error);\n    }\n  });\n\nexport const readFiles = async (\n  dir: string,\n  fileNames: string[],\n): Promise<object[]> =>\n  new Promise(async (resolve, reject) => {\n    const filesContent: object[] = [];\n\n    for (const fileName of fileNames) {\n      const filePath = path.join(dir, fileName);\n      try {\n        const content = await readFile(filePath);\n        filesContent.push(JSON.parse(content));\n      } catch (error: unknown) {\n        console.error(`Error reading file ${fileName}:`, error);\n        reject(error);\n      }\n    }\n\n    resolve(filesContent);\n  });\nexport const getConfigFile = async (url: string): Promise<IConfig | null> => {\n  try {\n    const response = await axios<IConfig[]>(url, GET_OPTIONS);\n    return {\n      ...response.data[0],\n      repository: addRepositoryUrl(url),\n    };\n  } catch (error: unknown) {\n    const err = <{ response: { status: number } }>error;\n    if (err.response && err.response.status === 404) {\n      return null;\n    }\n    throw error;\n  }\n};\nexport const addRepositoryUrl = (repositoryURL: string): string => {\n  const url = new URL(repositoryURL);\n  const newUrl = `${url.protocol}//${url.hostname}${url.pathname.split('/').slice(0, 3).join('/')}`;\n  console.log(newUrl);\n  return newUrl;\n};\n\nexport const getConfigFiles = async (\n  urls: string[],\n): Promise<(IConfig | null)[]> => {\n  const files = await Promise.all(urls.map((url) => getConfigFile(url)));\n  return files.filter((file) => file !== null);\n};\n\nexport const generateEapConfig = (config: IConfig): IEapConfig => {\n  const conf = {\n    umlFile: `${config.repository}/raw/master/${config.eap}`,\n    diagramName: config.diagram,\n    specificationType: SpecificationType[config.type],\n    versionId: VERSION_ID,\n    publicationEnvironment: PUBLICATION_ENVIRONMENT,\n  };\n  return conf;\n};\n"]}